#!/bin/bash

prescalers=( 1 2 4 8 16 64 256 1024 )


preamble() {
	cat << EOF
//
// Generated by ${0} on $(date)
//
// This script requires the following macros to be set:
//    TIMER_CLOCK : The base clock rate of the timer
//    TIMER_HZ   : The desired frequency of the PWM cycle
//    TIMER_TOP  : The value of the timer's PER register
//
// This script sets the following macros:
//    TIMER_PSC  : The value of the CLKSEL bits in the timer's CTRLA register
//
// This script finds the value for TIMER_PSC that will give a frequency of no
// more than TIMER_HZ with the given value of TIMER_TOP, or if that constraint
// can't be met it will give the lowest frequency achievable
//
#undef DONE

EOF
}

test_body() {
	PSC="${1}"

	cat << EOF

#if ! defined(DONE) && (TIMER_CLOCK / (TIMER_TOP * ${PSC})) <= TIMER_HZ
# define DONE 1
# define TIMER_PSC (TCA_SINGLE_CLKSEL_DIV${PSC}_gc)
#endif
EOF
}

postamble() {
	cat << EOF

#if ! defined(DONE)
# define TIMER_PSC (TCA_SINGLE_CLKSEL_DIV${prescalers[-1]}_gc)
#endif

#undef DONE
EOF
}

preamble
for psc in ${prescalers[@]}; do
	#test_body | sed "s|__PSC__|${psc}|g"
	test_body "${psc}"
done
postamble
