#!/bin/sh

USARTs="1 2 3 6"
UARTs="4 5 7 8"

cat << EOF
//
// Generated by ${0} on $(date)
//
EOF

template="
//
// USARTnnn
//
#if defined(USARTnnn)
# define HAVE_UARTnnn 1
#else
# define HAVE_UARTnnn 0
#endif

#if HAVE_UARTnnn
# if defined(PINID_UARTnnn_RX) && PINID_UARTnnn_RX > 0
#  define IS_UARTnnn_RX_DEF(_p_) (PINID(_p_) == PINID_UARTnnn_RX)
# else
#  define IS_UARTnnn_RX_DEF(_p_) (0)
# endif
#if defined(PINID_UARTnnn_RX_ALT2) && PINID_UARTnnn_RX_ALT2 > 0
#  define IS_UARTnnn_RX_ALT2(_p_) (PINID(_p_) == PINID_UARTnnn_RX_ALT2)
# else
#  define IS_UARTnnn_RX_ALT2(_p_) (0)
# endif
#if defined(PINID_UARTnnn_RX_ALT) && PINID_UARTnnn_RX_ALT > 0
#  define IS_UARTnnn_RX_ALT1(_p_) (PINID(_p_) == PINID_UARTnnn_RX_ALT)
# else
#  define IS_UARTnnn_RX_ALT1(_p_) (0)
# endif
# define IS_UARTnnn_RX(_p_) (IS_UARTnnn_RX_DEF(_p_) || IS_UARTnnn_RX_ALT1(_p_) || IS_UARTnnn_RX_ALT2(_p_))

#if defined(PINID_UARTnnn_TX) && PINID_UARTnnn_TX > 0
#  define IS_UARTnnn_TX_DEF(_p_) (PINID(_p_) == PINID_UARTnnn_TX)
# else
#  define IS_UARTnnn_TX_DEF(_p_) (0)
# endif
#if defined(PINID_UARTnnn_TX_ALT2) && PINID_UARTnnn_TX_ALT2 > 0
#  define IS_UARTnnn_TX_ALT2(_p_) (PINID(_p_) == PINID_UARTnnn_TX_ALT2)
# else
#  define IS_UARTnnn_TX_ALT2(_p_) (0)
# endif
#if defined(PINID_UARTnnn_TX_ALT) && PINID_UARTnnn_TX_ALT > 0
#  define IS_UARTnnn_TX_ALT1(_p_) (PINID(_p_) == PINID_UARTnnn_TX_ALT)
# else
#  define IS_UARTnnn_TX_ALT1(_p_) (0)
# endif
# define IS_UARTnnn_TX(_p_) (IS_UARTnnn_TX_DEF(_p_) || IS_UARTnnn_TX_ALT1(_p_) || IS_UARTnnn_TX_ALT2(_p_))

# define IS_UARTnnn(_rxp_, _txp_) (IS_UARTnnn_RX(_rxp_) && IS_UARTnnn_TX(_txp_))
# define IS_UARTnnn_STRUCT(_p_) (IS_UARTnnn((_p_)->rx_pin, (_p_)->tx_pin))

# if uHAL_USE_UART_COMM && IS_UARTnnn(UART_COMM_RX_PIN, UART_COMM_TX_PIN)
#  define UART_COMM_IRQn       USARTnnn_IRQn
#  define UART_COMM_IRQHandler USARTnnn_IRQHandler
#  define UART_COMM_CLOCKEN    RCC_PERIPH_UARTnnn
   DEBUG_CPP_MSG(\"Comms on USARTnnn\")
# endif

#else // HAVE_UARTnnn
# define IS_UARTnnn(_rx_pin_, _tx_pin_) (0)
# define IS_UARTnnn_STRUCT(_p_) (0)
#endif // HAVE_UARTnnn
"

for u in ${USARTs}; do
	printf "%s" "${template}" | sed -e "s|nnn|${u}|g"
done
for u in ${UARTs}; do
	printf "%s" "${template}" | sed -e "s|nnn|${u}|g" -e "s|USART|UART|g"
done

cat << EOF
EOF
