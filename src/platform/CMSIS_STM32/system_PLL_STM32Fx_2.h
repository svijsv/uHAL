/*
* This file was generated by tools/cmsis/stm32_clock_gen.sh on Wed Oct  9 04:59:01 PM EDT 2024
*
* Here we search for a PLLP division ratio which produces a valid frequency
* for the PLL output (PLL_OUTPUT_HZ) given a specified VCO output frequency
* (VCO_OUTPUT_HZ)
*
* VCO_OUTPUT_HZ was defined in system_PLL_STM32Fx_1.h
*/

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 2U)
# if (PLL_OUTPUT_HZ == FREQ_OUTPUT_HZ) && (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ)
#  define PLLP_DIV 2U
# endif
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 4U)
# if (PLL_OUTPUT_HZ == FREQ_OUTPUT_HZ) && (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ)
#  define PLLP_DIV 4U
# endif
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 6U)
# if (PLL_OUTPUT_HZ == FREQ_OUTPUT_HZ) && (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ)
#  define PLLP_DIV 6U
# endif
#endif

#if !defined(PLLP_DIV)
# undef PLL_OUTPUT_HZ
# define PLL_OUTPUT_HZ (VCO_OUTPUT_HZ / 8U)
# if (PLL_OUTPUT_HZ == FREQ_OUTPUT_HZ) && (PLL_OUTPUT_HZ >= PLL_OUTPUT_MIN_HZ)
#  define PLLP_DIV 8U
# endif
#endif

