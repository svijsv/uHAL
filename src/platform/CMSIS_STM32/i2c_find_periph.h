//
// Generated by tools/cmsis/i2c_find_periph.sh on Sun Sep  1 06:42:13 PM EDT 2024
//

#if INCLUDED_BY_I2C_C


//
// I2C1
//
#if defined(I2C1)
# define HAVE_I2C1 1
#else
# define HAVE_I2C1 0
#endif

#if HAVE_I2C1
# if defined(PINID_I2C1_SDA) && PINID_I2C1_SDA > 0
#  define IS_I2C1_SDA_DEF(_p_) (PINID(_p_) == PINID_I2C1_SDA)
# else
#  define IS_I2C1_SDA_DEF(_p_) (0)
# endif
# if defined(PINID_I2C1_SDA_ALT2) && PINID_I2C1_SDA_ALT2 > 0
#  define IS_I2C1_SDA_ALT2(_p_) (PINID(_p_) == PINID_I2C1_SDA_ALT2)
# else
#  define IS_I2C1_SDA_ALT2(_p_) (0)
# endif
# if defined(PINID_I2C1_SDA_ALT) && PINID_I2C1_SDA_ALT > 0
#  define IS_I2C1_SDA_ALT1(_p_) (PINID(_p_) == PINID_I2C1_SDA_ALT)
# else
#  define IS_I2C1_SDA_ALT1(_p_) (0)
# endif
# define IS_I2C1_SDA(_p_) (IS_I2C1_SDA_DEF(_p_) || IS_I2C1_SDA_ALT1(_p_) || IS_I2C1_SDA_ALT2(_p_))

# if defined(PINID_I2C1_SCL) && PINID_I2C1_SCL > 0
#  define IS_I2C1_SCL_DEF(_p_) (PINID(_p_) == PINID_I2C1_SCL)
# else
#  define IS_I2C1_SCL_DEF(_p_) (0)
# endif
# if defined(PINID_I2C1_SCL_ALT2) && PINID_I2C1_SCL_ALT2 > 0
#  define IS_I2C1_SCL_ALT2(_p_) (PINID(_p_) == PINID_I2C1_SCL_ALT2)
# else
#  define IS_I2C1_SCL_ALT2(_p_) (0)
# endif
# if defined(PINID_I2C1_SCL_ALT) && PINID_I2C1_SCL_ALT > 0
#  define IS_I2C1_SCL_ALT1(_p_) (PINID(_p_) == PINID_I2C1_SCL_ALT)
# else
#  define IS_I2C1_SCL_ALT1(_p_) (0)
# endif
# define IS_I2C1_SCL(_p_) (IS_I2C1_SCL_DEF(_p_) || IS_I2C1_SCL_ALT1(_p_) || IS_I2C1_SCL_ALT2(_p_))

# define IS_I2C1(_sdap_, _sclp_) (IS_I2C1_SDA(_sdap_) && IS_I2C1_SCL(_sclp_))

# if IS_I2C1(I2C_SDA_PIN, I2C_SCL_PIN)
#  define I2Cx I2C1
#  define I2Cx_CLOCKEN RCC_PERIPH_I2C1
#  define I2Cx_AF GPIOAF_I2C1
# endif

#else // HAVE_I2C1
# define IS_I2C1(_sdap_, _sclp_) (0)
#endif // HAVE_I2C1

//
// I2C2
//
#if defined(I2C2)
# define HAVE_I2C2 1
#else
# define HAVE_I2C2 0
#endif

#if HAVE_I2C2
# if defined(PINID_I2C2_SDA) && PINID_I2C2_SDA > 0
#  define IS_I2C2_SDA_DEF(_p_) (PINID(_p_) == PINID_I2C2_SDA)
# else
#  define IS_I2C2_SDA_DEF(_p_) (0)
# endif
# if defined(PINID_I2C2_SDA_ALT2) && PINID_I2C2_SDA_ALT2 > 0
#  define IS_I2C2_SDA_ALT2(_p_) (PINID(_p_) == PINID_I2C2_SDA_ALT2)
# else
#  define IS_I2C2_SDA_ALT2(_p_) (0)
# endif
# if defined(PINID_I2C2_SDA_ALT) && PINID_I2C2_SDA_ALT > 0
#  define IS_I2C2_SDA_ALT1(_p_) (PINID(_p_) == PINID_I2C2_SDA_ALT)
# else
#  define IS_I2C2_SDA_ALT1(_p_) (0)
# endif
# define IS_I2C2_SDA(_p_) (IS_I2C2_SDA_DEF(_p_) || IS_I2C2_SDA_ALT1(_p_) || IS_I2C2_SDA_ALT2(_p_))

# if defined(PINID_I2C2_SCL) && PINID_I2C2_SCL > 0
#  define IS_I2C2_SCL_DEF(_p_) (PINID(_p_) == PINID_I2C2_SCL)
# else
#  define IS_I2C2_SCL_DEF(_p_) (0)
# endif
# if defined(PINID_I2C2_SCL_ALT2) && PINID_I2C2_SCL_ALT2 > 0
#  define IS_I2C2_SCL_ALT2(_p_) (PINID(_p_) == PINID_I2C2_SCL_ALT2)
# else
#  define IS_I2C2_SCL_ALT2(_p_) (0)
# endif
# if defined(PINID_I2C2_SCL_ALT) && PINID_I2C2_SCL_ALT > 0
#  define IS_I2C2_SCL_ALT1(_p_) (PINID(_p_) == PINID_I2C2_SCL_ALT)
# else
#  define IS_I2C2_SCL_ALT1(_p_) (0)
# endif
# define IS_I2C2_SCL(_p_) (IS_I2C2_SCL_DEF(_p_) || IS_I2C2_SCL_ALT1(_p_) || IS_I2C2_SCL_ALT2(_p_))

# define IS_I2C2(_sdap_, _sclp_) (IS_I2C2_SDA(_sdap_) && IS_I2C2_SCL(_sclp_))

# if IS_I2C2(I2C_SDA_PIN, I2C_SCL_PIN)
#  define I2Cx I2C2
#  define I2Cx_CLOCKEN RCC_PERIPH_I2C2
#  define I2Cx_AF GPIOAF_I2C2
# endif

#else // HAVE_I2C2
# define IS_I2C2(_sdap_, _sclp_) (0)
#endif // HAVE_I2C2

//
// I2C3
//
#if defined(I2C3)
# define HAVE_I2C3 1
#else
# define HAVE_I2C3 0
#endif

#if HAVE_I2C3
# if defined(PINID_I2C3_SDA) && PINID_I2C3_SDA > 0
#  define IS_I2C3_SDA_DEF(_p_) (PINID(_p_) == PINID_I2C3_SDA)
# else
#  define IS_I2C3_SDA_DEF(_p_) (0)
# endif
# if defined(PINID_I2C3_SDA_ALT2) && PINID_I2C3_SDA_ALT2 > 0
#  define IS_I2C3_SDA_ALT2(_p_) (PINID(_p_) == PINID_I2C3_SDA_ALT2)
# else
#  define IS_I2C3_SDA_ALT2(_p_) (0)
# endif
# if defined(PINID_I2C3_SDA_ALT) && PINID_I2C3_SDA_ALT > 0
#  define IS_I2C3_SDA_ALT1(_p_) (PINID(_p_) == PINID_I2C3_SDA_ALT)
# else
#  define IS_I2C3_SDA_ALT1(_p_) (0)
# endif
# define IS_I2C3_SDA(_p_) (IS_I2C3_SDA_DEF(_p_) || IS_I2C3_SDA_ALT1(_p_) || IS_I2C3_SDA_ALT2(_p_))

# if defined(PINID_I2C3_SCL) && PINID_I2C3_SCL > 0
#  define IS_I2C3_SCL_DEF(_p_) (PINID(_p_) == PINID_I2C3_SCL)
# else
#  define IS_I2C3_SCL_DEF(_p_) (0)
# endif
# if defined(PINID_I2C3_SCL_ALT2) && PINID_I2C3_SCL_ALT2 > 0
#  define IS_I2C3_SCL_ALT2(_p_) (PINID(_p_) == PINID_I2C3_SCL_ALT2)
# else
#  define IS_I2C3_SCL_ALT2(_p_) (0)
# endif
# if defined(PINID_I2C3_SCL_ALT) && PINID_I2C3_SCL_ALT > 0
#  define IS_I2C3_SCL_ALT1(_p_) (PINID(_p_) == PINID_I2C3_SCL_ALT)
# else
#  define IS_I2C3_SCL_ALT1(_p_) (0)
# endif
# define IS_I2C3_SCL(_p_) (IS_I2C3_SCL_DEF(_p_) || IS_I2C3_SCL_ALT1(_p_) || IS_I2C3_SCL_ALT2(_p_))

# define IS_I2C3(_sdap_, _sclp_) (IS_I2C3_SDA(_sdap_) && IS_I2C3_SCL(_sclp_))

# if IS_I2C3(I2C_SDA_PIN, I2C_SCL_PIN)
#  define I2Cx I2C3
#  define I2Cx_CLOCKEN RCC_PERIPH_I2C3
#  define I2Cx_AF GPIOAF_I2C3
# endif

#else // HAVE_I2C3
# define IS_I2C3(_sdap_, _sclp_) (0)
#endif // HAVE_I2C3

#endif // INCLUDED_BY_I2C_C
