//
// Generated by tools/cmsis/time_pwm_find_ch_f1.sh on Sat Sep 21 08:22:55 PM EDT 2024
//


static TIM_TypeDef* find_available_pin_pwm_tim(gpio_pin_t pin, uint_fast8_t *tim_id, uint_fast8_t *channel, gpio_af_t *af_code, rcc_periph_t *rcc) {
	uint_fast8_t ch = 4, t;
	rcc_periph_t TIMxEN = 0;
	TIM_TypeDef *TIMx = NULL;

	switch (PINID(pin)) {

//
// 4-Channel PWM timers
//

//
// Timer 1
#if USE_TIMER1_PWM
	case PINID_TIM1_CH1:
		--ch;
# if defined(PINID_TIM1_CH2) && PINID_TIM1_CH2 > 0
		// fall through
	case PINID_TIM1_CH2:
# endif
		--ch;
# if defined(PINID_TIM1_CH3) && PINID_TIM1_CH3 > 0
		// fall through
	case PINID_TIM1_CH3:
# endif
		--ch;
# if defined(PINID_TIM1_CH4) && PINID_TIM1_CH4 > 0
		// fall through
	case PINID_TIM1_CH4:
# endif
		t = TIMER_1;
		TIMx = TIM1;
		TIMxEN = RCC_PERIPH_TIM1;
		break;
#endif // USE_TIMER1_PWM

//
// Timer 2
#if USE_TIMER2_PWM
	case PINID_TIM2_CH1:
		--ch;
# if defined(PINID_TIM2_CH2) && PINID_TIM2_CH2 > 0
		// fall through
	case PINID_TIM2_CH2:
# endif
		--ch;
# if defined(PINID_TIM2_CH3) && PINID_TIM2_CH3 > 0
		// fall through
	case PINID_TIM2_CH3:
# endif
		--ch;
# if defined(PINID_TIM2_CH4) && PINID_TIM2_CH4 > 0
		// fall through
	case PINID_TIM2_CH4:
# endif
		t = TIMER_2;
		TIMx = TIM2;
		TIMxEN = RCC_PERIPH_TIM2;
		break;
#endif // USE_TIMER2_PWM

//
// Timer 3
#if USE_TIMER3_PWM
	case PINID_TIM3_CH1:
		--ch;
# if defined(PINID_TIM3_CH2) && PINID_TIM3_CH2 > 0
		// fall through
	case PINID_TIM3_CH2:
# endif
		--ch;
# if defined(PINID_TIM3_CH3) && PINID_TIM3_CH3 > 0
		// fall through
	case PINID_TIM3_CH3:
# endif
		--ch;
# if defined(PINID_TIM3_CH4) && PINID_TIM3_CH4 > 0
		// fall through
	case PINID_TIM3_CH4:
# endif
		t = TIMER_3;
		TIMx = TIM3;
		TIMxEN = RCC_PERIPH_TIM3;
		break;
#endif // USE_TIMER3_PWM

//
// Timer 4
#if USE_TIMER4_PWM
	case PINID_TIM4_CH1:
		--ch;
# if defined(PINID_TIM4_CH2) && PINID_TIM4_CH2 > 0
		// fall through
	case PINID_TIM4_CH2:
# endif
		--ch;
# if defined(PINID_TIM4_CH3) && PINID_TIM4_CH3 > 0
		// fall through
	case PINID_TIM4_CH3:
# endif
		--ch;
# if defined(PINID_TIM4_CH4) && PINID_TIM4_CH4 > 0
		// fall through
	case PINID_TIM4_CH4:
# endif
		t = TIMER_4;
		TIMx = TIM4;
		TIMxEN = RCC_PERIPH_TIM4;
		break;
#endif // USE_TIMER4_PWM

//
// Timer 5
#if USE_TIMER5_PWM
	case PINID_TIM5_CH1:
		--ch;
# if defined(PINID_TIM5_CH2) && PINID_TIM5_CH2 > 0
		// fall through
	case PINID_TIM5_CH2:
# endif
		--ch;
# if defined(PINID_TIM5_CH3) && PINID_TIM5_CH3 > 0
		// fall through
	case PINID_TIM5_CH3:
# endif
		--ch;
# if defined(PINID_TIM5_CH4) && PINID_TIM5_CH4 > 0
		// fall through
	case PINID_TIM5_CH4:
# endif
		t = TIMER_5;
		TIMx = TIM5;
		TIMxEN = RCC_PERIPH_TIM5;
		break;
#endif // USE_TIMER5_PWM

//
// Timer 8
#if USE_TIMER8_PWM
	case PINID_TIM8_CH1:
		--ch;
# if defined(PINID_TIM8_CH2) && PINID_TIM8_CH2 > 0
		// fall through
	case PINID_TIM8_CH2:
# endif
		--ch;
# if defined(PINID_TIM8_CH3) && PINID_TIM8_CH3 > 0
		// fall through
	case PINID_TIM8_CH3:
# endif
		--ch;
# if defined(PINID_TIM8_CH4) && PINID_TIM8_CH4 > 0
		// fall through
	case PINID_TIM8_CH4:
# endif
		t = TIMER_8;
		TIMx = TIM8;
		TIMxEN = RCC_PERIPH_TIM8;
		break;
#endif // USE_TIMER8_PWM

//
// Timer 9
#if USE_TIMER9_PWM
	case PINID_TIM9_CH1:
		--ch;
# if defined(PINID_TIM9_CH2) && PINID_TIM9_CH2 > 0
		// fall through
	case PINID_TIM9_CH2:
# endif
		--ch;
# if defined(PINID_TIM9_CH3) && PINID_TIM9_CH3 > 0
		// fall through
	case PINID_TIM9_CH3:
# endif
		--ch;
# if defined(PINID_TIM9_CH4) && PINID_TIM9_CH4 > 0
		// fall through
	case PINID_TIM9_CH4:
# endif
		t = TIMER_9;
		TIMx = TIM9;
		TIMxEN = RCC_PERIPH_TIM9;
		break;
#endif // USE_TIMER9_PWM

//
// Timer 10
#if USE_TIMER10_PWM
	case PINID_TIM10_CH1:
		--ch;
# if defined(PINID_TIM10_CH2) && PINID_TIM10_CH2 > 0
		// fall through
	case PINID_TIM10_CH2:
# endif
		--ch;
# if defined(PINID_TIM10_CH3) && PINID_TIM10_CH3 > 0
		// fall through
	case PINID_TIM10_CH3:
# endif
		--ch;
# if defined(PINID_TIM10_CH4) && PINID_TIM10_CH4 > 0
		// fall through
	case PINID_TIM10_CH4:
# endif
		t = TIMER_10;
		TIMx = TIM10;
		TIMxEN = RCC_PERIPH_TIM10;
		break;
#endif // USE_TIMER10_PWM

//
// Timer 11
#if USE_TIMER11_PWM
	case PINID_TIM11_CH1:
		--ch;
# if defined(PINID_TIM11_CH2) && PINID_TIM11_CH2 > 0
		// fall through
	case PINID_TIM11_CH2:
# endif
		--ch;
# if defined(PINID_TIM11_CH3) && PINID_TIM11_CH3 > 0
		// fall through
	case PINID_TIM11_CH3:
# endif
		--ch;
# if defined(PINID_TIM11_CH4) && PINID_TIM11_CH4 > 0
		// fall through
	case PINID_TIM11_CH4:
# endif
		t = TIMER_11;
		TIMx = TIM11;
		TIMxEN = RCC_PERIPH_TIM11;
		break;
#endif // USE_TIMER11_PWM

//
// Timer 12
#if USE_TIMER12_PWM
	case PINID_TIM12_CH1:
		--ch;
# if defined(PINID_TIM12_CH2) && PINID_TIM12_CH2 > 0
		// fall through
	case PINID_TIM12_CH2:
# endif
		--ch;
# if defined(PINID_TIM12_CH3) && PINID_TIM12_CH3 > 0
		// fall through
	case PINID_TIM12_CH3:
# endif
		--ch;
# if defined(PINID_TIM12_CH4) && PINID_TIM12_CH4 > 0
		// fall through
	case PINID_TIM12_CH4:
# endif
		t = TIMER_12;
		TIMx = TIM12;
		TIMxEN = RCC_PERIPH_TIM12;
		break;
#endif // USE_TIMER12_PWM

//
// Timer 13
#if USE_TIMER13_PWM
	case PINID_TIM13_CH1:
		--ch;
# if defined(PINID_TIM13_CH2) && PINID_TIM13_CH2 > 0
		// fall through
	case PINID_TIM13_CH2:
# endif
		--ch;
# if defined(PINID_TIM13_CH3) && PINID_TIM13_CH3 > 0
		// fall through
	case PINID_TIM13_CH3:
# endif
		--ch;
# if defined(PINID_TIM13_CH4) && PINID_TIM13_CH4 > 0
		// fall through
	case PINID_TIM13_CH4:
# endif
		t = TIMER_13;
		TIMx = TIM13;
		TIMxEN = RCC_PERIPH_TIM13;
		break;
#endif // USE_TIMER13_PWM

//
// Timer 14
#if USE_TIMER14_PWM
	case PINID_TIM14_CH1:
		--ch;
# if defined(PINID_TIM14_CH2) && PINID_TIM14_CH2 > 0
		// fall through
	case PINID_TIM14_CH2:
# endif
		--ch;
# if defined(PINID_TIM14_CH3) && PINID_TIM14_CH3 > 0
		// fall through
	case PINID_TIM14_CH3:
# endif
		--ch;
# if defined(PINID_TIM14_CH4) && PINID_TIM14_CH4 > 0
		// fall through
	case PINID_TIM14_CH4:
# endif
		t = TIMER_14;
		TIMx = TIM14;
		TIMxEN = RCC_PERIPH_TIM14;
		break;
#endif // USE_TIMER14_PWM

	default:
		return NULL;
	}

#if ! uHAL_SKIP_OTHER_CHECKS
	uint32_t enr_bit;

	switch (ch) {
	case 1:
		enr_bit = TIM_CCER_CC1E;
		break;
	case 2:
		enr_bit = TIM_CCER_CC2E;
		break;
	case 3:
		enr_bit = TIM_CCER_CC3E;
		break;
	//case 4:
	default:
		enr_bit = TIM_CCER_CC4E;
		break;
	}
	// FIXME: Look for an alternative timer instead
	if (BIT_IS_SET(TIMx->CCER, enr_bit)) {
		return NULL;
	}
#endif

	if (tim_id != NULL) {
		*tim_id = t;
	}
	if (channel != NULL) {
		*channel = ch;
	}
	if (af_code != NULL) {
		*af_code = 0;
	}
	if (rcc != NULL) {
		*rcc = TIMxEN;
	}
	return TIMx;
}
